// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OnlineStoreMicroservices.AccountantsDepartment.Context;

namespace OnlineStoreMicroservices.AccountantsDepartment.Migrations
{
    [DbContext(typeof(AccountantDbContext))]
    partial class AccountantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.BasketProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UserBasketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserBasketId");

                    b.ToTable("BasketProducts");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Boots one",
                            Price = 100m
                        },
                        new
                        {
                            Id = 2,
                            Name = "Boots two",
                            Price = 150m
                        },
                        new
                        {
                            Id = 3,
                            Name = "Boots three",
                            Price = 200m
                        });
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBasket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("UserBaskets");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("UserBasketId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserBasketId")
                        .IsUnique();

                    b.ToTable("UserBills");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.BasketProduct", b =>
                {
                    b.HasOne("OnlineStoreMicroservices.AccountantsDepartment.Models.Product", "ProductRef")
                        .WithMany("BasketProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBasket", "UserBasketRef")
                        .WithMany("BasketProducts")
                        .HasForeignKey("UserBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductRef");

                    b.Navigation("UserBasketRef");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBill", b =>
                {
                    b.HasOne("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBasket", "UserBasketRef")
                        .WithOne("UserBillRef")
                        .HasForeignKey("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBill", "UserBasketId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserBasketRef");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.Product", b =>
                {
                    b.Navigation("BasketProducts");
                });

            modelBuilder.Entity("OnlineStoreMicroservices.AccountantsDepartment.Models.UserBasket", b =>
                {
                    b.Navigation("BasketProducts");

                    b.Navigation("UserBillRef");
                });
#pragma warning restore 612, 618
        }
    }
}
